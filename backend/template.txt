Parameters:
  BUILDENV:
    Type: String
    Description: The build environment
  AssetParameters729c83dc5850bb4055c60e1458f75207b4d2f41209f27cb18f75c56f849951b6S3BucketD18CDF68:
    Type: String
    Description: S3 bucket for asset "729c83dc5850bb4055c60e1458f75207b4d2f41209f27cb18f75c56f849951b6"
  AssetParameters729c83dc5850bb4055c60e1458f75207b4d2f41209f27cb18f75c56f849951b6S3VersionKey548A0E96:
    Type: String
    Description: S3 key for asset version "729c83dc5850bb4055c60e1458f75207b4d2f41209f27cb18f75c56f849951b6"
  AssetParameters729c83dc5850bb4055c60e1458f75207b4d2f41209f27cb18f75c56f849951b6ArtifactHash6B88F1A8:
    Type: String
    Description: Artifact hash for asset "729c83dc5850bb4055c60e1458f75207b4d2f41209f27cb18f75c56f849951b6"
  AssetParameters77a2363a2537167ef23bcba5f599e6dd85770ca093ae1f3435e563d9f726155fS3Bucket705F3365:
    Type: String
    Description: S3 bucket for asset "77a2363a2537167ef23bcba5f599e6dd85770ca093ae1f3435e563d9f726155f"
  AssetParameters77a2363a2537167ef23bcba5f599e6dd85770ca093ae1f3435e563d9f726155fS3VersionKeyFCEA4189:
    Type: String
    Description: S3 key for asset version "77a2363a2537167ef23bcba5f599e6dd85770ca093ae1f3435e563d9f726155f"
  AssetParameters77a2363a2537167ef23bcba5f599e6dd85770ca093ae1f3435e563d9f726155fArtifactHashD4221C4C:
    Type: String
    Description: Artifact hash for asset "77a2363a2537167ef23bcba5f599e6dd85770ca093ae1f3435e563d9f726155f"
  AssetParametersa6eb54294d733287f8c6caa99dbb7debd15b6750d22cb251ff1f3e052bde8ec2S3Bucket87778394:
    Type: String
    Description: S3 bucket for asset "a6eb54294d733287f8c6caa99dbb7debd15b6750d22cb251ff1f3e052bde8ec2"
  AssetParametersa6eb54294d733287f8c6caa99dbb7debd15b6750d22cb251ff1f3e052bde8ec2S3VersionKey4335B515:
    Type: String
    Description: S3 key for asset version "a6eb54294d733287f8c6caa99dbb7debd15b6750d22cb251ff1f3e052bde8ec2"
  AssetParametersa6eb54294d733287f8c6caa99dbb7debd15b6750d22cb251ff1f3e052bde8ec2ArtifactHash2C555F50:
    Type: String
    Description: Artifact hash for asset "a6eb54294d733287f8c6caa99dbb7debd15b6750d22cb251ff1f3e052bde8ec2"
  AssetParameters4f4b764347be53ef41d34baa01a84d13cc0ecb880ebe788d82bdca60a57f7ba6S3Bucket8EC6EB25:
    Type: String
    Description: S3 bucket for asset "4f4b764347be53ef41d34baa01a84d13cc0ecb880ebe788d82bdca60a57f7ba6"
  AssetParameters4f4b764347be53ef41d34baa01a84d13cc0ecb880ebe788d82bdca60a57f7ba6S3VersionKeyD11C6076:
    Type: String
    Description: S3 key for asset version "4f4b764347be53ef41d34baa01a84d13cc0ecb880ebe788d82bdca60a57f7ba6"
  AssetParameters4f4b764347be53ef41d34baa01a84d13cc0ecb880ebe788d82bdca60a57f7ba6ArtifactHashADE7067C:
    Type: String
    Description: Artifact hash for asset "4f4b764347be53ef41d34baa01a84d13cc0ecb880ebe788d82bdca60a57f7ba6"
  AssetParameters969bc3d3378ce8d246fb9529575880dec26b3569960ff25e15ff5d0081802253S3Bucket5DFDB2F8:
    Type: String
    Description: S3 bucket for asset "969bc3d3378ce8d246fb9529575880dec26b3569960ff25e15ff5d0081802253"
  AssetParameters969bc3d3378ce8d246fb9529575880dec26b3569960ff25e15ff5d0081802253S3VersionKey14119D62:
    Type: String
    Description: S3 key for asset version "969bc3d3378ce8d246fb9529575880dec26b3569960ff25e15ff5d0081802253"
  AssetParameters969bc3d3378ce8d246fb9529575880dec26b3569960ff25e15ff5d0081802253ArtifactHash6885EFD8:
    Type: String
    Description: Artifact hash for asset "969bc3d3378ce8d246fb9529575880dec26b3569960ff25e15ff5d0081802253"
  AssetParameters4e2f0e2d7e2a34c4f1fd0c4265f72308c20aa42927e3f03c0ac47e84ef1f6f04S3Bucket17BFEBE4:
    Type: String
    Description: S3 bucket for asset "4e2f0e2d7e2a34c4f1fd0c4265f72308c20aa42927e3f03c0ac47e84ef1f6f04"
  AssetParameters4e2f0e2d7e2a34c4f1fd0c4265f72308c20aa42927e3f03c0ac47e84ef1f6f04S3VersionKey10393D6D:
    Type: String
    Description: S3 key for asset version "4e2f0e2d7e2a34c4f1fd0c4265f72308c20aa42927e3f03c0ac47e84ef1f6f04"
  AssetParameters4e2f0e2d7e2a34c4f1fd0c4265f72308c20aa42927e3f03c0ac47e84ef1f6f04ArtifactHash26CBC1B5:
    Type: String
    Description: Artifact hash for asset "4e2f0e2d7e2a34c4f1fd0c4265f72308c20aa42927e3f03c0ac47e84ef1f6f04"
  AssetParameters4a3609ad912843e581892f37ae9d6fb0fa1648b547693aaa562b0119452b8956S3Bucket72B03BC9:
    Type: String
    Description: S3 bucket for asset "4a3609ad912843e581892f37ae9d6fb0fa1648b547693aaa562b0119452b8956"
  AssetParameters4a3609ad912843e581892f37ae9d6fb0fa1648b547693aaa562b0119452b8956S3VersionKey520B7554:
    Type: String
    Description: S3 key for asset version "4a3609ad912843e581892f37ae9d6fb0fa1648b547693aaa562b0119452b8956"
  AssetParameters4a3609ad912843e581892f37ae9d6fb0fa1648b547693aaa562b0119452b8956ArtifactHashD15A2D11:
    Type: String
    Description: Artifact hash for asset "4a3609ad912843e581892f37ae9d6fb0fa1648b547693aaa562b0119452b8956"
  AssetParametersf74db5edabf72a29e72c91fe319be49c9d2aff256c92dfe820939a2bfecd3351S3Bucket401A9D14:
    Type: String
    Description: S3 bucket for asset "f74db5edabf72a29e72c91fe319be49c9d2aff256c92dfe820939a2bfecd3351"
  AssetParametersf74db5edabf72a29e72c91fe319be49c9d2aff256c92dfe820939a2bfecd3351S3VersionKeyE554B792:
    Type: String
    Description: S3 key for asset version "f74db5edabf72a29e72c91fe319be49c9d2aff256c92dfe820939a2bfecd3351"
  AssetParametersf74db5edabf72a29e72c91fe319be49c9d2aff256c92dfe820939a2bfecd3351ArtifactHashD71F0A69:
    Type: String
    Description: Artifact hash for asset "f74db5edabf72a29e72c91fe319be49c9d2aff256c92dfe820939a2bfecd3351"
  AssetParameters96dc02e013f3743ed7186e59081da15c80d25f1b763f172bfa13f84eb54dceb0S3Bucket83EFCDFB:
    Type: String
    Description: S3 bucket for asset "96dc02e013f3743ed7186e59081da15c80d25f1b763f172bfa13f84eb54dceb0"
  AssetParameters96dc02e013f3743ed7186e59081da15c80d25f1b763f172bfa13f84eb54dceb0S3VersionKey0503C274:
    Type: String
    Description: S3 key for asset version "96dc02e013f3743ed7186e59081da15c80d25f1b763f172bfa13f84eb54dceb0"
  AssetParameters96dc02e013f3743ed7186e59081da15c80d25f1b763f172bfa13f84eb54dceb0ArtifactHash98F53276:
    Type: String
    Description: Artifact hash for asset "96dc02e013f3743ed7186e59081da15c80d25f1b763f172bfa13f84eb54dceb0"
Resources:
  RestApi0C43BF4B:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: RestApi
    Metadata:
      aws:cdk:path: EmailCampaignServiceStack/RestApi/Resource
  RestApiCloudWatchRoleE3ED6605:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs
    Metadata:
      aws:cdk:path: EmailCampaignServiceStack/RestApi/CloudWatchRole/Resource
  RestApiAccount7C83CF5A:
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn:
        Fn::GetAtt:
          - RestApiCloudWatchRoleE3ED6605
          - Arn
    DependsOn:
      - RestApi0C43BF4B
    Metadata:
      aws:cdk:path: EmailCampaignServiceStack/RestApi/Account
  RestApiDeployment180EC50319284627735fc3666c4183bf29a6d862:
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId:
        Ref: RestApi0C43BF4B
      Description: Automatically created by the RestApi construct
    DependsOn:
      - EmailApiAuthReqModel8BFB5A4E
      - EmailApiValidatorC6E7E374
      - RestApiemailOPTIONSB234CE89
      - RestApiemailPOST5FAEC525
      - RestApiemail98856B31
      - RestApiOPTIONS6AA64D2D
      - RestApitemplatesidDELETE18119B40
      - RestApitemplatesidGETEC01A045
      - RestApitemplatesidOPTIONSEF0D3188
      - RestApitemplatesid1495B94C
      - RestApitemplatesGET3B3E23F3
      - RestApitemplatesOPTIONS812FCF64
      - RestApitemplatesPOST91DB5A5D
      - RestApitemplates723098AA
      - UploadTemplateReqModelC2ACD52A
      - UploadTemplateValidatorCB7A5294
    Metadata:
      aws:cdk:path: EmailCampaignServiceStack/RestApi/Deployment/Resource
  RestApiDeploymentStageprod3855DE66:
    Type: AWS::ApiGateway::Stage
    Properties:
      RestApiId:
        Ref: RestApi0C43BF4B
      DeploymentId:
        Ref: RestApiDeployment180EC50319284627735fc3666c4183bf29a6d862
      StageName: prod
    Metadata:
      aws:cdk:path: EmailCampaignServiceStack/RestApi/DeploymentStage.prod/Resource
  RestApiOPTIONS6AA64D2D:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Fn::GetAtt:
          - RestApi0C43BF4B
          - RootResourceId
      RestApiId:
        Ref: RestApi0C43BF4B
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: EmailCampaignServiceStack/RestApi/Default/OPTIONS/Resource
  RestApitemplates723098AA:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - RestApi0C43BF4B
          - RootResourceId
      PathPart: templates
      RestApiId:
        Ref: RestApi0C43BF4B
    Metadata:
      aws:cdk:path: EmailCampaignServiceStack/RestApi/Default/templates/Resource
  RestApitemplatesOPTIONS812FCF64:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: RestApitemplates723098AA
      RestApiId:
        Ref: RestApi0C43BF4B
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: EmailCampaignServiceStack/RestApi/Default/templates/OPTIONS/Resource
  RestApitemplatesPOSTApiPermissionEmailCampaignServiceStackRestApi7437500APOSTtemplates96074DA2:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - UploadTemplateHandlerA6614BBB
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: RestApi0C43BF4B
            - /
            - Ref: RestApiDeploymentStageprod3855DE66
            - /POST/templates
    Metadata:
      aws:cdk:path: EmailCampaignServiceStack/RestApi/Default/templates/POST/ApiPermission.EmailCampaignServiceStackRestApi7437500A.POST..templates
  RestApitemplatesPOSTApiPermissionTestEmailCampaignServiceStackRestApi7437500APOSTtemplatesF11064EF:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - UploadTemplateHandlerA6614BBB
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: RestApi0C43BF4B
            - /test-invoke-stage/POST/templates
    Metadata:
      aws:cdk:path: EmailCampaignServiceStack/RestApi/Default/templates/POST/ApiPermission.Test.EmailCampaignServiceStackRestApi7437500A.POST..templates
  RestApitemplatesPOST91DB5A5D:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: POST
      ResourceId:
        Ref: RestApitemplates723098AA
      RestApiId:
        Ref: RestApi0C43BF4B
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId:
        Ref: TemplateAuthorizer341828E6
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - UploadTemplateHandlerA6614BBB
                  - Arn
              - /invocations
      RequestModels:
        application/json:
          Ref: UploadTemplateReqModelC2ACD52A
      RequestValidatorId:
        Ref: UploadTemplateValidatorCB7A5294
    Metadata:
      aws:cdk:path: EmailCampaignServiceStack/RestApi/Default/templates/POST/Resource
  RestApitemplatesGETApiPermissionEmailCampaignServiceStackRestApi7437500AGETtemplatesADF83C08:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - ListTemplatesHandler500E7BEF
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: RestApi0C43BF4B
            - /
            - Ref: RestApiDeploymentStageprod3855DE66
            - /GET/templates
    Metadata:
      aws:cdk:path: EmailCampaignServiceStack/RestApi/Default/templates/GET/ApiPermission.EmailCampaignServiceStackRestApi7437500A.GET..templates
  RestApitemplatesGETApiPermissionTestEmailCampaignServiceStackRestApi7437500AGETtemplatesEA515730:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - ListTemplatesHandler500E7BEF
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: RestApi0C43BF4B
            - /test-invoke-stage/GET/templates
    Metadata:
      aws:cdk:path: EmailCampaignServiceStack/RestApi/Default/templates/GET/ApiPermission.Test.EmailCampaignServiceStackRestApi7437500A.GET..templates
  RestApitemplatesGET3B3E23F3:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: RestApitemplates723098AA
      RestApiId:
        Ref: RestApi0C43BF4B
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId:
        Ref: TemplateAuthorizer341828E6
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - ListTemplatesHandler500E7BEF
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: EmailCampaignServiceStack/RestApi/Default/templates/GET/Resource
  RestApitemplatesid1495B94C:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: RestApitemplates723098AA
      PathPart: "{id}"
      RestApiId:
        Ref: RestApi0C43BF4B
    Metadata:
      aws:cdk:path: EmailCampaignServiceStack/RestApi/Default/templates/{id}/Resource
  RestApitemplatesidOPTIONSEF0D3188:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: RestApitemplatesid1495B94C
      RestApiId:
        Ref: RestApi0C43BF4B
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: EmailCampaignServiceStack/RestApi/Default/templates/{id}/OPTIONS/Resource
  RestApitemplatesidGETApiPermissionEmailCampaignServiceStackRestApi7437500AGETtemplatesid935A0879:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - GetTemplateMetadataHandlerA565CA54
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: RestApi0C43BF4B
            - /
            - Ref: RestApiDeploymentStageprod3855DE66
            - /GET/templates/*
    Metadata:
      aws:cdk:path: EmailCampaignServiceStack/RestApi/Default/templates/{id}/GET/ApiPermission.EmailCampaignServiceStackRestApi7437500A.GET..templates.{id}
  RestApitemplatesidGETApiPermissionTestEmailCampaignServiceStackRestApi7437500AGETtemplatesid4158FBDF:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - GetTemplateMetadataHandlerA565CA54
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: RestApi0C43BF4B
            - /test-invoke-stage/GET/templates/*
    Metadata:
      aws:cdk:path: EmailCampaignServiceStack/RestApi/Default/templates/{id}/GET/ApiPermission.Test.EmailCampaignServiceStackRestApi7437500A.GET..templates.{id}
  RestApitemplatesidGETEC01A045:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: RestApitemplatesid1495B94C
      RestApiId:
        Ref: RestApi0C43BF4B
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId:
        Ref: TemplateAuthorizer341828E6
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - GetTemplateMetadataHandlerA565CA54
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: EmailCampaignServiceStack/RestApi/Default/templates/{id}/GET/Resource
  RestApitemplatesidDELETEApiPermissionEmailCampaignServiceStackRestApi7437500ADELETEtemplatesidC236ABE3:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - DeleteTemplateHandler7EDEFB7F
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: RestApi0C43BF4B
            - /
            - Ref: RestApiDeploymentStageprod3855DE66
            - /DELETE/templates/*
    Metadata:
      aws:cdk:path: EmailCampaignServiceStack/RestApi/Default/templates/{id}/DELETE/ApiPermission.EmailCampaignServiceStackRestApi7437500A.DELETE..templates.{id}
  RestApitemplatesidDELETEApiPermissionTestEmailCampaignServiceStackRestApi7437500ADELETEtemplatesid8B639522:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - DeleteTemplateHandler7EDEFB7F
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: RestApi0C43BF4B
            - /test-invoke-stage/DELETE/templates/*
    Metadata:
      aws:cdk:path: EmailCampaignServiceStack/RestApi/Default/templates/{id}/DELETE/ApiPermission.Test.EmailCampaignServiceStackRestApi7437500A.DELETE..templates.{id}
  RestApitemplatesidDELETE18119B40:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: DELETE
      ResourceId:
        Ref: RestApitemplatesid1495B94C
      RestApiId:
        Ref: RestApi0C43BF4B
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId:
        Ref: TemplateAuthorizer341828E6
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - DeleteTemplateHandler7EDEFB7F
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: EmailCampaignServiceStack/RestApi/Default/templates/{id}/DELETE/Resource
  RestApiemail98856B31:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - RestApi0C43BF4B
          - RootResourceId
      PathPart: email
      RestApiId:
        Ref: RestApi0C43BF4B
    Metadata:
      aws:cdk:path: EmailCampaignServiceStack/RestApi/Default/email/Resource
  RestApiemailOPTIONSB234CE89:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: RestApiemail98856B31
      RestApiId:
        Ref: RestApi0C43BF4B
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: EmailCampaignServiceStack/RestApi/Default/email/OPTIONS/Resource
  RestApiemailPOSTApiPermissionEmailCampaignServiceStackRestApi7437500APOSTemailA6D4991E:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - SendEmailHandler63586035
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: RestApi0C43BF4B
            - /
            - Ref: RestApiDeploymentStageprod3855DE66
            - /POST/email
    Metadata:
      aws:cdk:path: EmailCampaignServiceStack/RestApi/Default/email/POST/ApiPermission.EmailCampaignServiceStackRestApi7437500A.POST..email
  RestApiemailPOSTApiPermissionTestEmailCampaignServiceStackRestApi7437500APOSTemail3F48ABBE:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - SendEmailHandler63586035
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: RestApi0C43BF4B
            - /test-invoke-stage/POST/email
    Metadata:
      aws:cdk:path: EmailCampaignServiceStack/RestApi/Default/email/POST/ApiPermission.Test.EmailCampaignServiceStackRestApi7437500A.POST..email
  RestApiemailPOST5FAEC525:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: POST
      ResourceId:
        Ref: RestApiemail98856B31
      RestApiId:
        Ref: RestApi0C43BF4B
      AuthorizationType: CUSTOM
      AuthorizerId:
        Ref: RequestAuthorizer7473A0B3
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - SendEmailHandler63586035
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: EmailCampaignServiceStack/RestApi/Default/email/POST/Resource
  LoginLogs2DAE3E89:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Join:
          - ""
          - - /amplify/Login-
            - Ref: BUILDENV
      RetentionInDays: 180
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: EmailCampaignServiceStack/LoginLogs/Resource
  LogoutLogsC594CB85:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Join:
          - ""
          - - /amplify/Logout-
            - Ref: BUILDENV
      RetentionInDays: 180
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: EmailCampaignServiceStack/LogoutLogs/Resource
  MetadataTable30E05F1F:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        - AttributeName: templateId
          KeyType: HASH
        - AttributeName: timeCreated
          KeyType: RANGE
      AttributeDefinitions:
        - AttributeName: templateId
          AttributeType: S
        - AttributeName: timeCreated
          AttributeType: "N"
        - AttributeName: templateStatus
          AttributeType: S
        - AttributeName: templateName
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      GlobalSecondaryIndexes:
        - IndexName: name-and-status-index
          KeySchema:
            - AttributeName: templateStatus
              KeyType: HASH
            - AttributeName: templateName
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
        - IndexName: id-and-status-index
          KeySchema:
            - AttributeName: templateStatus
              KeyType: HASH
            - AttributeName: templateId
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
        - IndexName: status-index
          KeySchema:
            - AttributeName: templateStatus
              KeyType: HASH
            - AttributeName: timeCreated
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: EmailCampaignServiceStack/MetadataTable/Resource
  HTMLBucket3A1CE945:
    Type: AWS::S3::Bucket
    Properties:
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders:
              - Authorization
            AllowedMethods:
              - POST
            AllowedOrigins:
              - "*"
            MaxAge: 3000
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: EmailCampaignServiceStack/HTMLBucket/Resource
  HTMLBucketNotifications92140CC0:
    Type: Custom::S3BucketNotifications
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691
          - Arn
      BucketName:
        Ref: HTMLBucket3A1CE945
      NotificationConfiguration:
        LambdaFunctionConfigurations:
          - Events:
              - s3:ObjectCreated:*
            Filter:
              Key:
                FilterRules:
                  - Name: prefix
                    Value: src/
            LambdaFunctionArn:
              Fn::GetAtt:
                - ProcessHTMLHandler09A209DB
                - Arn
          - Events:
              - s3:ObjectRemoved:*
            Filter:
              Key:
                FilterRules:
                  - Name: prefix
                    Value: processed/
            LambdaFunctionArn:
              Fn::GetAtt:
                - RemoveImagesHandler556B048F
                - Arn
    DependsOn:
      - HTMLBucketAllowBucketNotificationsToEmailCampaignServiceStackProcessHTMLHandler9B77BDFA6FCEBF0A
      - HTMLBucketAllowBucketNotificationsToEmailCampaignServiceStackRemoveImagesHandler47769D75AE49A946
    Metadata:
      aws:cdk:path: EmailCampaignServiceStack/HTMLBucket/Notifications/Resource
  HTMLBucketAllowBucketNotificationsToEmailCampaignServiceStackProcessHTMLHandler9B77BDFA6FCEBF0A:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - ProcessHTMLHandler09A209DB
          - Arn
      Principal: s3.amazonaws.com
      SourceAccount:
        Ref: AWS::AccountId
      SourceArn:
        Fn::GetAtt:
          - HTMLBucket3A1CE945
          - Arn
    Metadata:
      aws:cdk:path: EmailCampaignServiceStack/HTMLBucket/AllowBucketNotificationsToEmailCampaignServiceStackProcessHTMLHandler9B77BDFA
  HTMLBucketAllowBucketNotificationsToEmailCampaignServiceStackRemoveImagesHandler47769D75AE49A946:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - RemoveImagesHandler556B048F
          - Arn
      Principal: s3.amazonaws.com
      SourceAccount:
        Ref: AWS::AccountId
      SourceArn:
        Fn::GetAtt:
          - HTMLBucket3A1CE945
          - Arn
    Metadata:
      aws:cdk:path: EmailCampaignServiceStack/HTMLBucket/AllowBucketNotificationsToEmailCampaignServiceStackRemoveImagesHandler47769D75
  ImageBucket97210811:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: PublicRead
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders:
              - Authorization
            AllowedMethods:
              - POST
            AllowedOrigins:
              - "*"
            MaxAge: 3000
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: EmailCampaignServiceStack/ImageBucket/Resource
  ImageBucketPolicy9E7B0384:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: ImageBucket97210811
      PolicyDocument:
        Statement:
          - Action: s3:GetObject
            Effect: Allow
            Principal: "*"
            Resource:
              Fn::Join:
                - ""
                - - Fn::GetAtt:
                      - ImageBucket97210811
                      - Arn
                  - /*
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: EmailCampaignServiceStack/ImageBucket/Policy/Resource
  ProcessHTMLHandlerServiceRole83B8EF0F:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: EmailCampaignServiceStack/ProcessHTMLHandler/ServiceRole/Resource
  ProcessHTMLHandlerServiceRoleDefaultPolicyE1C9790F:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - HTMLBucket3A1CE945
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - HTMLBucket3A1CE945
                        - Arn
                    - /src/*
          - Action: s3:DeleteObject*
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - Fn::GetAtt:
                      - HTMLBucket3A1CE945
                      - Arn
                  - /src/*
          - Action:
              - s3:PutObject
              - s3:Abort*
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - Fn::GetAtt:
                      - HTMLBucket3A1CE945
                      - Arn
                  - /processed/*
          - Action:
              - s3:PutObject
              - s3:Abort*
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - Fn::GetAtt:
                      - ImageBucket97210811
                      - Arn
                  - /*
        Version: "2012-10-17"
      PolicyName: ProcessHTMLHandlerServiceRoleDefaultPolicyE1C9790F
      Roles:
        - Ref: ProcessHTMLHandlerServiceRole83B8EF0F
    Metadata:
      aws:cdk:path: EmailCampaignServiceStack/ProcessHTMLHandler/ServiceRole/DefaultPolicy/Resource
  ProcessHTMLHandler09A209DB:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters729c83dc5850bb4055c60e1458f75207b4d2f41209f27cb18f75c56f849951b6S3BucketD18CDF68
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters729c83dc5850bb4055c60e1458f75207b4d2f41209f27cb18f75c56f849951b6S3VersionKey548A0E96
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters729c83dc5850bb4055c60e1458f75207b4d2f41209f27cb18f75c56f849951b6S3VersionKey548A0E96
      Role:
        Fn::GetAtt:
          - ProcessHTMLHandlerServiceRole83B8EF0F
          - Arn
      Environment:
        Variables:
          HTML_BUCKET_NAME:
            Ref: HTMLBucket3A1CE945
          SRC_HTML_PATH: src/
          PROCESSED_HTML_PATH: processed/
          IMAGE_BUCKET_NAME:
            Ref: ImageBucket97210811
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
      FunctionName:
        Fn::Join:
          - ""
          - - ProcessHTMLHandler-
            - Ref: BUILDENV
      Handler: index.handler
      Runtime: nodejs12.x
      Timeout: 10
    DependsOn:
      - ProcessHTMLHandlerServiceRoleDefaultPolicyE1C9790F
      - ProcessHTMLHandlerServiceRole83B8EF0F
    Metadata:
      aws:cdk:path: EmailCampaignServiceStack/ProcessHTMLHandler/Resource
      aws:asset:path: asset.729c83dc5850bb4055c60e1458f75207b4d2f41209f27cb18f75c56f849951b6
      aws:asset:property: Code
  BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: EmailCampaignServiceStack/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Role/Resource
  BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: s3:PutBucketNotification
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36
      Roles:
        - Ref: BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC
    Metadata:
      aws:cdk:path: EmailCampaignServiceStack/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Role/DefaultPolicy/Resource
  BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691:
    Type: AWS::Lambda::Function
    Properties:
      Description: AWS CloudFormation handler for "Custom::S3BucketNotifications" resources (@aws-cdk/aws-s3)
      Code:
        ZipFile: >-
          exports.handler = (event, context) => {
              // eslint-disable-next-line @typescript-eslint/no-require-imports, import/no-extraneous-dependencies
              const s3 = new (require('aws-sdk').S3)();
              // eslint-disable-next-line @typescript-eslint/no-require-imports
              const https = require('https');
              // eslint-disable-next-line @typescript-eslint/no-require-imports
              const url = require('url');
              log(JSON.stringify(event, undefined, 2));
              const props = event.ResourceProperties;
              if (event.RequestType === 'Delete') {
                  props.NotificationConfiguration = {}; // this is how you clean out notifications
              }
              const req = {
                  Bucket: props.BucketName,
                  NotificationConfiguration: props.NotificationConfiguration,
              };
              return s3.putBucketNotificationConfiguration(req, (err, data) => {
                  log({ err, data });
                  if (err) {
                      return submitResponse('FAILED', err.message + `\nMore information in CloudWatch Log Stream: ${context.logStreamName}`);
                  }
                  else {
                      return submitResponse('SUCCESS');
                  }
              });
              function log(obj) {
                  console.error(event.RequestId, event.StackId, event.LogicalResourceId, obj);
              }
              // eslint-disable-next-line max-len
              // adapted from https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-code.html#cfn-lambda-function-code-cfnresponsemodule
              // to allow sending an error messge as a reason.
              function submitResponse(responseStatus, reason) {
                  const responseBody = JSON.stringify({
                      Status: responseStatus,
                      Reason: reason || 'See the details in CloudWatch Log Stream: ' + context.logStreamName,
                      PhysicalResourceId: event.PhysicalResourceId || event.LogicalResourceId,
                      StackId: event.StackId,
                      RequestId: event.RequestId,
                      LogicalResourceId: event.LogicalResourceId,
                      NoEcho: false,
                  });
                  log({ responseBody });
                  const parsedUrl = url.parse(event.ResponseURL);
                  const options = {
                      hostname: parsedUrl.hostname,
                      port: 443,
                      path: parsedUrl.path,
                      method: 'PUT',
                      headers: {
                          'content-type': '',
                          'content-length': responseBody.length,
                      },
                  };
                  const request = https.request(options, (r) => {
                      log({ statusCode: r.statusCode, statusMessage: r.statusMessage });
                      context.done();
                  });
                  request.on('error', (error) => {
                      log({ sendError: error });
                      context.done();
                  });
                  request.write(responseBody);
                  request.end();
              }
          };
      Handler: index.handler
      Role:
        Fn::GetAtt:
          - BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC
          - Arn
      Runtime: nodejs10.x
      Timeout: 300
    DependsOn:
      - BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36
      - BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC
    Metadata:
      aws:cdk:path: EmailCampaignServiceStack/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Resource
  RemoveImagesHandlerServiceRole69A5654B:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: EmailCampaignServiceStack/RemoveImagesHandler/ServiceRole/Resource
  RemoveImagesHandlerServiceRoleDefaultPolicyD47C727C:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - ImageBucket97210811
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - ImageBucket97210811
                        - Arn
                    - /*
          - Action: s3:DeleteObject*
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - Fn::GetAtt:
                      - ImageBucket97210811
                      - Arn
                  - /*
        Version: "2012-10-17"
      PolicyName: RemoveImagesHandlerServiceRoleDefaultPolicyD47C727C
      Roles:
        - Ref: RemoveImagesHandlerServiceRole69A5654B
    Metadata:
      aws:cdk:path: EmailCampaignServiceStack/RemoveImagesHandler/ServiceRole/DefaultPolicy/Resource
  RemoveImagesHandler556B048F:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters77a2363a2537167ef23bcba5f599e6dd85770ca093ae1f3435e563d9f726155fS3Bucket705F3365
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters77a2363a2537167ef23bcba5f599e6dd85770ca093ae1f3435e563d9f726155fS3VersionKeyFCEA4189
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters77a2363a2537167ef23bcba5f599e6dd85770ca093ae1f3435e563d9f726155fS3VersionKeyFCEA4189
      Role:
        Fn::GetAtt:
          - RemoveImagesHandlerServiceRole69A5654B
          - Arn
      Environment:
        Variables:
          IMAGE_BUCKET_NAME:
            Ref: ImageBucket97210811
          PROCESSED_HTML_PATH: processed/
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
      FunctionName:
        Fn::Join:
          - ""
          - - RemoveImagesHandler-
            - Ref: BUILDENV
      Handler: index.handler
      Runtime: nodejs12.x
    DependsOn:
      - RemoveImagesHandlerServiceRoleDefaultPolicyD47C727C
      - RemoveImagesHandlerServiceRole69A5654B
    Metadata:
      aws:cdk:path: EmailCampaignServiceStack/RemoveImagesHandler/Resource
      aws:asset:path: asset.77a2363a2537167ef23bcba5f599e6dd85770ca093ae1f3435e563d9f726155f
      aws:asset:property: Code
  ProcessHTMLHandlerLogs7E199B3D:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Join:
          - ""
          - - /aws/lambda/ProcessHTMLHandler-
            - Ref: BUILDENV
      RetentionInDays: 180
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: EmailCampaignServiceStack/ProcessHTMLHandlerLogs/Resource
  RemoveImagesHandlerLogs74DE1B4E:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Join:
          - ""
          - - /aws/lambda/RemoveImagesHandler-
            - Ref: BUILDENV
      RetentionInDays: 180
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: EmailCampaignServiceStack/RemoveImagesHandlerLogs/Resource
  UploadTemplateHandlerServiceRole743565DB:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: EmailCampaignServiceStack/UploadTemplateHandler/ServiceRole/Resource
  UploadTemplateHandlerServiceRoleDefaultPolicyE150DB30:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:PutObject
              - s3:Abort*
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - Fn::GetAtt:
                      - HTMLBucket3A1CE945
                      - Arn
                  - /src/*
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:GetItem
              - dynamodb:Scan
              - dynamodb:ConditionCheckItem
              - dynamodb:BatchWriteItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - MetadataTable30E05F1F
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - MetadataTable30E05F1F
                        - Arn
                    - /index/*
          - Action: kms:Encrypt
            Effect: Allow
            Resource: arn:aws:kms:ca-central-1:353747297524:key/b2c01359-6245-4303-abfb-ee8b49f65e1e
        Version: "2012-10-17"
      PolicyName: UploadTemplateHandlerServiceRoleDefaultPolicyE150DB30
      Roles:
        - Ref: UploadTemplateHandlerServiceRole743565DB
    Metadata:
      aws:cdk:path: EmailCampaignServiceStack/UploadTemplateHandler/ServiceRole/DefaultPolicy/Resource
  UploadTemplateHandlerA6614BBB:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParametersa6eb54294d733287f8c6caa99dbb7debd15b6750d22cb251ff1f3e052bde8ec2S3Bucket87778394
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersa6eb54294d733287f8c6caa99dbb7debd15b6750d22cb251ff1f3e052bde8ec2S3VersionKey4335B515
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersa6eb54294d733287f8c6caa99dbb7debd15b6750d22cb251ff1f3e052bde8ec2S3VersionKey4335B515
      Role:
        Fn::GetAtt:
          - UploadTemplateHandlerServiceRole743565DB
          - Arn
      Environment:
        Variables:
          METADATA_TABLE_NAME:
            Ref: MetadataTable30E05F1F
          HTML_BUCKET_NAME:
            Ref: HTMLBucket3A1CE945
          SRC_HTML_PATH: src/
          PRESIGNED_URL_EXPIRY: "600"
          DYNAMO_API_VERSION: 2019.11. 21
          KMS_REGION: ca-central-1
          KMS_ACCOUNT_ID: "353747297524"
          KMS_KEY_ID: b2c01359-6245-4303-abfb-ee8b49f65e1e
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
      FunctionName:
        Fn::Join:
          - ""
          - - UploadTemplateHandler-
            - Ref: BUILDENV
      Handler: index.handler
      Runtime: nodejs12.x
    DependsOn:
      - UploadTemplateHandlerServiceRoleDefaultPolicyE150DB30
      - UploadTemplateHandlerServiceRole743565DB
    Metadata:
      aws:cdk:path: EmailCampaignServiceStack/UploadTemplateHandler/Resource
      aws:asset:path: asset.a6eb54294d733287f8c6caa99dbb7debd15b6750d22cb251ff1f3e052bde8ec2
      aws:asset:property: Code
  GetTemplateMetadataHandlerServiceRoleF5C74A72:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: EmailCampaignServiceStack/GetTemplateMetadataHandler/ServiceRole/Resource
  GetTemplateMetadataHandlerServiceRoleDefaultPolicy7196D299:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:GetItem
              - dynamodb:Scan
              - dynamodb:ConditionCheckItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - MetadataTable30E05F1F
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - MetadataTable30E05F1F
                        - Arn
                    - /index/*
        Version: "2012-10-17"
      PolicyName: GetTemplateMetadataHandlerServiceRoleDefaultPolicy7196D299
      Roles:
        - Ref: GetTemplateMetadataHandlerServiceRoleF5C74A72
    Metadata:
      aws:cdk:path: EmailCampaignServiceStack/GetTemplateMetadataHandler/ServiceRole/DefaultPolicy/Resource
  GetTemplateMetadataHandlerA565CA54:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters4f4b764347be53ef41d34baa01a84d13cc0ecb880ebe788d82bdca60a57f7ba6S3Bucket8EC6EB25
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters4f4b764347be53ef41d34baa01a84d13cc0ecb880ebe788d82bdca60a57f7ba6S3VersionKeyD11C6076
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters4f4b764347be53ef41d34baa01a84d13cc0ecb880ebe788d82bdca60a57f7ba6S3VersionKeyD11C6076
      Role:
        Fn::GetAtt:
          - GetTemplateMetadataHandlerServiceRoleF5C74A72
          - Arn
      Environment:
        Variables:
          METADATA_TABLE_NAME:
            Ref: MetadataTable30E05F1F
          DYNAMO_API_VERSION: 2019.11. 21
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
      FunctionName:
        Fn::Join:
          - ""
          - - GetTemplateMetadataHandler-
            - Ref: BUILDENV
      Handler: index.handler
      Runtime: nodejs12.x
    DependsOn:
      - GetTemplateMetadataHandlerServiceRoleDefaultPolicy7196D299
      - GetTemplateMetadataHandlerServiceRoleF5C74A72
    Metadata:
      aws:cdk:path: EmailCampaignServiceStack/GetTemplateMetadataHandler/Resource
      aws:asset:path: asset.4f4b764347be53ef41d34baa01a84d13cc0ecb880ebe788d82bdca60a57f7ba6
      aws:asset:property: Code
  ListTemplatesHandlerServiceRole0925BAD0:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: EmailCampaignServiceStack/ListTemplatesHandler/ServiceRole/Resource
  ListTemplatesHandlerServiceRoleDefaultPolicyD9D3A962:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:GetItem
              - dynamodb:Scan
              - dynamodb:ConditionCheckItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - MetadataTable30E05F1F
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - MetadataTable30E05F1F
                        - Arn
                    - /index/*
        Version: "2012-10-17"
      PolicyName: ListTemplatesHandlerServiceRoleDefaultPolicyD9D3A962
      Roles:
        - Ref: ListTemplatesHandlerServiceRole0925BAD0
    Metadata:
      aws:cdk:path: EmailCampaignServiceStack/ListTemplatesHandler/ServiceRole/DefaultPolicy/Resource
  ListTemplatesHandler500E7BEF:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters969bc3d3378ce8d246fb9529575880dec26b3569960ff25e15ff5d0081802253S3Bucket5DFDB2F8
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters969bc3d3378ce8d246fb9529575880dec26b3569960ff25e15ff5d0081802253S3VersionKey14119D62
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters969bc3d3378ce8d246fb9529575880dec26b3569960ff25e15ff5d0081802253S3VersionKey14119D62
      Role:
        Fn::GetAtt:
          - ListTemplatesHandlerServiceRole0925BAD0
          - Arn
      Environment:
        Variables:
          METADATA_TABLE_NAME:
            Ref: MetadataTable30E05F1F
          DYNAMO_API_VERSION: 2019.11. 21
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
      FunctionName:
        Fn::Join:
          - ""
          - - ListTemplatesHandler-
            - Ref: BUILDENV
      Handler: index.handler
      Runtime: nodejs12.x
    DependsOn:
      - ListTemplatesHandlerServiceRoleDefaultPolicyD9D3A962
      - ListTemplatesHandlerServiceRole0925BAD0
    Metadata:
      aws:cdk:path: EmailCampaignServiceStack/ListTemplatesHandler/Resource
      aws:asset:path: asset.969bc3d3378ce8d246fb9529575880dec26b3569960ff25e15ff5d0081802253
      aws:asset:property: Code
  DeleteTemplateHandlerServiceRoleA75D2D92:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: EmailCampaignServiceStack/DeleteTemplateHandler/ServiceRole/Resource
  DeleteTemplateHandlerServiceRoleDefaultPolicy4F34AA17:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:GetItem
              - dynamodb:Scan
              - dynamodb:ConditionCheckItem
              - dynamodb:BatchWriteItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - MetadataTable30E05F1F
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - MetadataTable30E05F1F
                        - Arn
                    - /index/*
          - Action: s3:DeleteObject*
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - Fn::GetAtt:
                      - HTMLBucket3A1CE945
                      - Arn
                  - /processed/*
        Version: "2012-10-17"
      PolicyName: DeleteTemplateHandlerServiceRoleDefaultPolicy4F34AA17
      Roles:
        - Ref: DeleteTemplateHandlerServiceRoleA75D2D92
    Metadata:
      aws:cdk:path: EmailCampaignServiceStack/DeleteTemplateHandler/ServiceRole/DefaultPolicy/Resource
  DeleteTemplateHandler7EDEFB7F:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters4e2f0e2d7e2a34c4f1fd0c4265f72308c20aa42927e3f03c0ac47e84ef1f6f04S3Bucket17BFEBE4
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters4e2f0e2d7e2a34c4f1fd0c4265f72308c20aa42927e3f03c0ac47e84ef1f6f04S3VersionKey10393D6D
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters4e2f0e2d7e2a34c4f1fd0c4265f72308c20aa42927e3f03c0ac47e84ef1f6f04S3VersionKey10393D6D
      Role:
        Fn::GetAtt:
          - DeleteTemplateHandlerServiceRoleA75D2D92
          - Arn
      Environment:
        Variables:
          METADATA_TABLE_NAME:
            Ref: MetadataTable30E05F1F
          HTML_BUCKET_NAME:
            Ref: HTMLBucket3A1CE945
          PROCESSED_HTML_PATH: processed/
          DYNAMO_API_VERSION: 2019.11. 21
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
      FunctionName:
        Fn::Join:
          - ""
          - - DeleteTemplateHandler-
            - Ref: BUILDENV
      Handler: index.handler
      Runtime: nodejs12.x
    DependsOn:
      - DeleteTemplateHandlerServiceRoleDefaultPolicy4F34AA17
      - DeleteTemplateHandlerServiceRoleA75D2D92
    Metadata:
      aws:cdk:path: EmailCampaignServiceStack/DeleteTemplateHandler/Resource
      aws:asset:path: asset.4e2f0e2d7e2a34c4f1fd0c4265f72308c20aa42927e3f03c0ac47e84ef1f6f04
      aws:asset:property: Code
  TemplateAuthorizer341828E6:
    Type: AWS::ApiGateway::Authorizer
    Properties:
      RestApiId:
        Ref: RestApi0C43BF4B
      Type: COGNITO_USER_POOLS
      IdentitySource: method.request.header.Authorization
      Name: EmailCampaignServiceStackTemplateAuthorizerB6881432
      ProviderARNs:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":cognito-idp:"
              - Ref: AWS::Region
              - ":"
              - Ref: AWS::AccountId
              - :userpool/ca-central-1_LtJbCIl1y
    Metadata:
      aws:cdk:path: EmailCampaignServiceStack/TemplateAuthorizer/Resource
  UploadTemplateValidatorCB7A5294:
    Type: AWS::ApiGateway::RequestValidator
    Properties:
      RestApiId:
        Ref: RestApi0C43BF4B
      Name: template-upload-req-validator
      ValidateRequestBody: true
    Metadata:
      aws:cdk:path: EmailCampaignServiceStack/UploadTemplateValidator/Resource
  UploadTemplateReqModelC2ACD52A:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: RestApi0C43BF4B
      ContentType: application/json
      Description: Upload template request payload
      Schema:
        type: object
        properties:
          templateName:
            type: string
          fieldNames:
            type: array
            items:
              type: string
        required:
          - templateName
          - fieldNames
        $schema: http://json-schema.org/draft-04/schema#
    Metadata:
      aws:cdk:path: EmailCampaignServiceStack/UploadTemplateReqModel/Resource
  UploadTemplateHandlerLogsA0C632DD:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Join:
          - ""
          - - /aws/lambda/UploadTemplateHandler-
            - Ref: BUILDENV
      RetentionInDays: 180
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: EmailCampaignServiceStack/UploadTemplateHandlerLogs/Resource
  GetTemplateMetadataHandlerLogsFDF99840:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Join:
          - ""
          - - /aws/lambda/GetTemplateMetadataHandler-
            - Ref: BUILDENV
      RetentionInDays: 180
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: EmailCampaignServiceStack/GetTemplateMetadataHandlerLogs/Resource
  ListTemplatesHandlerLogs63BB76BB:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Join:
          - ""
          - - /aws/lambda/ListTemplatesHandler-
            - Ref: BUILDENV
      RetentionInDays: 180
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: EmailCampaignServiceStack/ListTemplatesHandlerLogs/Resource
  DeleteTemplateHandlerLogs6100EE7D:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Join:
          - ""
          - - /aws/lambda/DeleteTemplateHandler-
            - Ref: BUILDENV
      RetentionInDays: 180
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: EmailCampaignServiceStack/DeleteTemplateHandlerLogs/Resource
  SESEmailVerifyEmailVerifiershizukostudentubccaCustomResourcePolicy0DAB3786:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - ses:VerifyEmailIdentity
              - ses:DeleteIdentity
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: SESEmailVerifyEmailVerifiershizukostudentubccaCustomResourcePolicy0DAB3786
      Roles:
        - Ref: AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2
    Metadata:
      aws:cdk:path: EmailCampaignServiceStack/SESEmailVerify/EmailVerifier-shizuko@student.ubc.ca/CustomResourcePolicy/Resource
  SESEmailVerifyEmailVerifiershizukostudentubcca98A0CFB1:
    Type: Custom::AWS
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - AWS679f53fac002430cb0da5b7982bd22872D164C4C
          - Arn
      Create:
        service: SES
        action: verifyEmailIdentity
        parameters:
          EmailAddress: shizuko@student.ubc.ca
        physicalResourceId:
          id: verify-shizuko@student.ubc.ca
      Delete:
        service: SES
        action: deleteIdentity
        parameters:
          Identity: shizuko@student.ubc.ca
      InstallLatestAwsSdk: true
    DependsOn:
      - SESEmailVerifyEmailVerifiershizukostudentubccaCustomResourcePolicy0DAB3786
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: EmailCampaignServiceStack/SESEmailVerify/EmailVerifier-shizuko@student.ubc.ca/Resource/Default
  AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: EmailCampaignServiceStack/AWS679f53fac002430cb0da5b7982bd2287/ServiceRole/Resource
  AWS679f53fac002430cb0da5b7982bd22872D164C4C:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters4a3609ad912843e581892f37ae9d6fb0fa1648b547693aaa562b0119452b8956S3Bucket72B03BC9
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters4a3609ad912843e581892f37ae9d6fb0fa1648b547693aaa562b0119452b8956S3VersionKey520B7554
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters4a3609ad912843e581892f37ae9d6fb0fa1648b547693aaa562b0119452b8956S3VersionKey520B7554
      Role:
        Fn::GetAtt:
          - AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2
          - Arn
      Handler: index.handler
      Runtime: nodejs12.x
      Timeout: 120
    DependsOn:
      - AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2
    Metadata:
      aws:cdk:path: EmailCampaignServiceStack/AWS679f53fac002430cb0da5b7982bd2287/Resource
      aws:asset:path: asset.4a3609ad912843e581892f37ae9d6fb0fa1648b547693aaa562b0119452b8956
      aws:asset:property: Code
  SendEmailHandlerServiceRole66B393DE:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: EmailCampaignServiceStack/SendEmailHandler/ServiceRole/Resource
  SendEmailHandlerServiceRoleDefaultPolicy6365BC0D:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - HTMLBucket3A1CE945
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - HTMLBucket3A1CE945
                        - Arn
                    - /processed/*
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:GetItem
              - dynamodb:Scan
              - dynamodb:ConditionCheckItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - MetadataTable30E05F1F
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - MetadataTable30E05F1F
                        - Arn
                    - /index/*
          - Action:
              - ses:SendEmail
              - ses:SendRawEmail
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: SendEmailHandlerServiceRoleDefaultPolicy6365BC0D
      Roles:
        - Ref: SendEmailHandlerServiceRole66B393DE
    Metadata:
      aws:cdk:path: EmailCampaignServiceStack/SendEmailHandler/ServiceRole/DefaultPolicy/Resource
  SendEmailHandler63586035:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParametersf74db5edabf72a29e72c91fe319be49c9d2aff256c92dfe820939a2bfecd3351S3Bucket401A9D14
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersf74db5edabf72a29e72c91fe319be49c9d2aff256c92dfe820939a2bfecd3351S3VersionKeyE554B792
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersf74db5edabf72a29e72c91fe319be49c9d2aff256c92dfe820939a2bfecd3351S3VersionKeyE554B792
      Role:
        Fn::GetAtt:
          - SendEmailHandlerServiceRole66B393DE
          - Arn
      Environment:
        Variables:
          HTML_BUCKET_NAME:
            Ref: HTMLBucket3A1CE945
          PROCESSED_HTML_PATH: processed/
          METADATA_TABLE_NAME:
            Ref: MetadataTable30E05F1F
          VERIFIED_EMAIL_ADDRESS: shizuko@student.ubc.ca
          VERSION: "2010-12-01"
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
      FunctionName:
        Fn::Join:
          - ""
          - - SendEmailHandler-
            - Ref: BUILDENV
      Handler: index.handler
      Runtime: nodejs12.x
      Timeout: 10
    DependsOn:
      - SendEmailHandlerServiceRoleDefaultPolicy6365BC0D
      - SendEmailHandlerServiceRole66B393DE
    Metadata:
      aws:cdk:path: EmailCampaignServiceStack/SendEmailHandler/Resource
      aws:asset:path: asset.f74db5edabf72a29e72c91fe319be49c9d2aff256c92dfe820939a2bfecd3351
      aws:asset:property: Code
  EmailAPIAuthorizerServiceRoleCE4A2AE7:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: EmailCampaignServiceStack/EmailAPIAuthorizer/ServiceRole/Resource
  EmailAPIAuthorizerServiceRoleDefaultPolicyBD72097D:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:GetItem
              - dynamodb:Scan
              - dynamodb:ConditionCheckItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - MetadataTable30E05F1F
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - MetadataTable30E05F1F
                        - Arn
                    - /index/*
          - Action: kms:Decrypt
            Effect: Allow
            Resource: arn:aws:kms:ca-central-1:353747297524:key/b2c01359-6245-4303-abfb-ee8b49f65e1e
        Version: "2012-10-17"
      PolicyName: EmailAPIAuthorizerServiceRoleDefaultPolicyBD72097D
      Roles:
        - Ref: EmailAPIAuthorizerServiceRoleCE4A2AE7
    Metadata:
      aws:cdk:path: EmailCampaignServiceStack/EmailAPIAuthorizer/ServiceRole/DefaultPolicy/Resource
  EmailAPIAuthorizer6D4C3137:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters96dc02e013f3743ed7186e59081da15c80d25f1b763f172bfa13f84eb54dceb0S3Bucket83EFCDFB
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters96dc02e013f3743ed7186e59081da15c80d25f1b763f172bfa13f84eb54dceb0S3VersionKey0503C274
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters96dc02e013f3743ed7186e59081da15c80d25f1b763f172bfa13f84eb54dceb0S3VersionKey0503C274
      Role:
        Fn::GetAtt:
          - EmailAPIAuthorizerServiceRoleCE4A2AE7
          - Arn
      Environment:
        Variables:
          KMS_REGION: ca-central-1
          KMS_ACCOUNT_ID: "353747297524"
          KMS_KEY_ID: b2c01359-6245-4303-abfb-ee8b49f65e1e
          METADATA_TABLE_NAME:
            Ref: MetadataTable30E05F1F
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
      FunctionName:
        Fn::Join:
          - ""
          - - EmailAPIAuthorizer-
            - Ref: BUILDENV
      Handler: index.handler
      Runtime: nodejs12.x
    DependsOn:
      - EmailAPIAuthorizerServiceRoleDefaultPolicyBD72097D
      - EmailAPIAuthorizerServiceRoleCE4A2AE7
    Metadata:
      aws:cdk:path: EmailCampaignServiceStack/EmailAPIAuthorizer/Resource
      aws:asset:path: asset.96dc02e013f3743ed7186e59081da15c80d25f1b763f172bfa13f84eb54dceb0
      aws:asset:property: Code
  EmailAPIAuthorizerEmailCampaignServiceStackRequestAuthorizer7363E3C5PermissionsE0E724E4:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - EmailAPIAuthorizer6D4C3137
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: RestApi0C43BF4B
            - /authorizers/
            - Ref: RequestAuthorizer7473A0B3
    Metadata:
      aws:cdk:path: EmailCampaignServiceStack/EmailAPIAuthorizer/EmailCampaignServiceStackRequestAuthorizer7363E3C5:Permissions
  RequestAuthorizer7473A0B3:
    Type: AWS::ApiGateway::Authorizer
    Properties:
      RestApiId:
        Ref: RestApi0C43BF4B
      Type: REQUEST
      AuthorizerUri:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":apigateway:"
            - Ref: AWS::Region
            - :lambda:path/2015-03-31/functions/
            - Fn::GetAtt:
                - EmailAPIAuthorizer6D4C3137
                - Arn
            - /invocations
      IdentitySource: method.request.header.TemplateId,method.request.header.APIKey
      Name: EmailCampaignServiceStackRequestAuthorizer7363E3C5
    Metadata:
      aws:cdk:path: EmailCampaignServiceStack/RequestAuthorizer/Resource
  EmailApiValidatorC6E7E374:
    Type: AWS::ApiGateway::RequestValidator
    Properties:
      RestApiId:
        Ref: RestApi0C43BF4B
      Name: email-api-auth-req-validator
      ValidateRequestBody: true
      ValidateRequestParameters: true
    Metadata:
      aws:cdk:path: EmailCampaignServiceStack/EmailApiValidator/Resource
  EmailApiAuthReqModel8BFB5A4E:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: RestApi0C43BF4B
      ContentType: application/json
      Description: Email api auth request payload
      Schema:
        type: object
        properties:
          body:
            type: object
            properties:
              templateID:
                type: string
              apiKey:
                type: string
        required:
          - templateID
          - apiKey
        $schema: http://json-schema.org/draft-04/schema#
    Metadata:
      aws:cdk:path: EmailCampaignServiceStack/EmailApiAuthReqModel/Resource
  EmailAPIAuthorizerLogs8A7C14BF:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Join:
          - ""
          - - /aws/lambda/EmailAPIAuthorizer-
            - Ref: BUILDENV
      RetentionInDays: 180
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: EmailCampaignServiceStack/EmailAPIAuthorizerLogs/Resource
  SendEmailHandlerLogsC2D63052:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Join:
          - ""
          - - /aws/lambda/SendEmailHandler-
            - Ref: BUILDENV
      RetentionInDays: 180
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: EmailCampaignServiceStack/SendEmailHandlerLogs/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Modules: aws-cdk=1.89.0,@aws-cdk/assets=1.88.0,@aws-cdk/aws-apigateway=1.88.0,@aws-cdk/aws-applicationautoscaling=1.88.0,@aws-cdk/aws-autoscaling-common=1.88.0,@aws-cdk/aws-cloudwatch=1.88.0,@aws-cdk/aws-codeguruprofiler=1.88.0,@aws-cdk/aws-cognito=1.88.0,@aws-cdk/aws-dynamodb=1.88.0,@aws-cdk/aws-ec2=1.88.0,@aws-cdk/aws-ecr=1.88.0,@aws-cdk/aws-ecr-assets=1.88.0,@aws-cdk/aws-events=1.88.0,@aws-cdk/aws-iam=1.88.0,@aws-cdk/aws-kms=1.88.0,@aws-cdk/aws-lambda=1.88.0,@aws-cdk/aws-lambda-event-sources=1.88.0,@aws-cdk/aws-lambda-nodejs=1.88.0,@aws-cdk/aws-logs=1.88.0,@aws-cdk/aws-s3=1.88.0,@aws-cdk/aws-s3-assets=1.88.0,@aws-cdk/aws-s3-notifications=1.88.0,@aws-cdk/aws-sns=1.88.0,@aws-cdk/aws-sns-subscriptions=1.88.0,@aws-cdk/aws-sqs=1.88.0,@aws-cdk/aws-ssm=1.88.0,@aws-cdk/cloud-assembly-schema=1.88.0,@aws-cdk/core=1.88.0,@aws-cdk/custom-resources=1.88.0,@aws-cdk/cx-api=1.88.0,@aws-cdk/region-info=1.88.0,jsii-runtime=node.js/v14.15.4
    Metadata:
      aws:cdk:path: EmailCampaignServiceStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Outputs:
  RestApiEndpoint0551178A:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: RestApi0C43BF4B
          - .execute-api.
          - Ref: AWS::Region
          - "."
          - Ref: AWS::URLSuffix
          - /
          - Ref: RestApiDeploymentStageprod3855DE66
          - /
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2

